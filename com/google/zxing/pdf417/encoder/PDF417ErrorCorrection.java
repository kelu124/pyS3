package com.google.zxing.pdf417.encoder;

import android.support.v7.widget.helper.ItemTouchHelper.Callback;
import com.google.zxing.WriterException;
import com.google.zxing.pdf417.PDF417Common;
import com.itextpdf.text.Element;
import com.itextpdf.text.Jpeg;
import com.itextpdf.text.pdf.codec.TIFFConstants;
import com.itextpdf.text.pdf.codec.wmf.MetaDo;
import com.itextpdf.xmp.XMPError;
import org.apache.poi.hssf.usermodel.HSSFShapeTypes;
import org.bytedeco.javacpp.avcodec.AVCodecContext;
import org.bytedeco.javacpp.avformat.AVStream;
import org.bytedeco.javacpp.avutil;
import org.bytedeco.javacpp.dc1394;
import org.bytedeco.javacpp.opencv_videoio;

final class PDF417ErrorCorrection {
    private static final int[][] EC_COEFFICIENTS = new int[][]{new int[]{27, 917}, new int[]{522, 568, 723, 809}, new int[]{Jpeg.M_APPD, avutil.AV_PIX_FMT_YUV444P12LE, 436, TIFFConstants.TIFFTAG_PLANARCONFIG, 646, 653, 428, 379}, new int[]{TIFFConstants.TIFFTAG_ORIENTATION, opencv_videoio.CV_CAP_PROP_XI_HDR_T2, 232, 755, 599, MetaDo.META_SETWINDOWEXT, 801, 132, 295, 116, 442, 428, 295, 42, 176, 65}, new int[]{dc1394.DC1394_COLOR_CODING_RAW8, 575, 922, MetaDo.META_SETVIEWPORTORG, 176, opencv_videoio.CV_CAP_PROP_XI_SENSOR_FEATURE_VALUE, 640, 321, opencv_videoio.CV_CAP_PROP_XI_COUNTER_SELECTOR, 742, 677, 742, 687, TIFFConstants.TIFFTAG_PLANARCONFIG, HSSFShapeTypes.ActionButtonForwardNext, 517, TIFFConstants.TIFFTAG_STRIPOFFSETS, opencv_videoio.CV_CAP_PROP_XI_CC_MATRIX_33, 263, 147, 593, 800, opencv_videoio.CV_CAP_PROP_XI_HW_REVISION, 320, 803, 133, 231, dc1394.DC1394_TRIGGER_MODE_14, 685, 330, 63, 410}, new int[]{opencv_videoio.CV_CAP_PROP_XI_AVAILABLE_BANDWIDTH, 422, 6, 93, 862, 771, 453, 106, dc1394.DC1394_POWER_CLASS_PROV_MIN_30W, TIFFConstants.TIFFTAG_YPOSITION, 107, MetaDo.META_CREATEPATTERNBRUSH, 733, 877, 381, dc1394.DC1394_POWER_CLASS_USES_MAX_1W, 723, opencv_videoio.CV_CAP_PROP_XI_GAMMAY, opencv_videoio.CV_CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH, 172, 430, dc1394.DC1394_POWER_CLASS_PROV_MIN_15W, 858, 822, opencv_videoio.CV_CAP_PROP_XI_LUT_VALUE, 376, 511, 400, 672, MetaDo.META_CREATEPENINDIRECT, TIFFConstants.TIFFTAG_YRESOLUTION, 184, opencv_videoio.CV_CAP_PROP_XI_AEAG_ROI_OFFSET_Y, 35, TIFFConstants.TIFFTAG_JPEGQTABLES, 31, opencv_videoio.CV_CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH, 594, 225, opencv_videoio.CV_CAP_PROP_XI_FRAMERATE, 517, 352, 605, 158, 651, 201, opencv_videoio.CV_CAP_PROP_XI_CC_MATRIX_21, 502, 648, 733, 717, 83, 404, 97, TIFFConstants.TIFFTAG_MINSAMPLEVALUE, 771, 840, 629, 4, 381, 843, 623, 264, opencv_videoio.CV_CAP_PROP_XI_LUT_VALUE}, new int[]{521, avutil.AV_PIX_FMT_YUV444P14LE, 864, 547, 858, 580, 296, 379, 53, 779, 897, 444, 400, 925, 749, 415, 822, 93, 217, 208, PDF417Common.MAX_CODEWORDS_IN_BARCODE, AVCodecContext.FF_PROFILE_H264_HIGH_444_PREDICTIVE, opencv_videoio.CV_CAP_PROP_XI_FFS_ACCESS_KEY, 620, 246, 148, 447, 631, TIFFConstants.TIFFTAG_GROUP3OPTIONS, 908, opencv_videoio.CV_CAP_PROP_XI_CC_MATRIX_23, 704, opencv_videoio.CV_CAP_PROP_XI_LENS_FOCAL_LENGTH, 258, 457, 907, 594, 723, 674, TIFFConstants.TIFFTAG_GROUP3OPTIONS, TIFFConstants.TIFFTAG_MODEL, 96, 684, 432, 686, 606, 860, 569, HSSFShapeTypes.ActionButtonForwardNext, 219, 129, 186, 236, TIFFConstants.TIFFTAG_YPOSITION, 192, 775, TIFFConstants.TIFFTAG_ROWSPERSTRIP, 173, 40, 379, 712, opencv_videoio.CV_CAP_PROP_XI_OUTPUT_DATA_PACKING, 646, 776, 171, opencv_videoio.CV_CAP_PROP_XI_CC_MATRIX_30, 297, MetaDo.META_CREATEFONTINDIRECT, 156, 732, 95, 270, 447, 90, opencv_videoio.CV_CAP_PROP_XI_DEBOUNCE_EN, 48, 228, 821, 808, 898, 784, 663, 627, 378, 382, 262, 380, 602, 754, 336, 89, dc1394.DC1394_POWER_CLASS_USES_MAX_6W, 87, 432, 670, 616, 157, 374, 242, 726, 600, TIFFConstants.TIFFTAG_DOCUMENTNAME, 375, 898, 845, 454, dc1394.DC1394_COLOR_CODING_YUV422, 130, 814, 587, MetaDo.META_POLYGON, 34, 211, 330, opencv_videoio.CV_CAP_PROP_XI_AVAILABLE_BANDWIDTH, 297, 827, 865, 37, 517, 834, 315, 550, 86, 801, 4, 108, opencv_videoio.CV_CAP_PROP_XI_AVAILABLE_BANDWIDTH}, new int[]{MetaDo.META_SETWINDOWEXT, 894, 75, 766, 882, 857, 74, XMPError.BADSTREAM, 82, opencv_videoio.CV_CAP_PROP_XI_SENSOR_FEATURE_VALUE, 708, Callback.DEFAULT_SWIPE_ANIMATION_DURATION, 905, 786, 138, 720, 858, HSSFShapeTypes.ActionButtonBackPrevious, 311, 913, 275, 190, 375, 850, 438, 733, HSSFShapeTypes.ActionButtonBackPrevious, TIFFConstants.TIFFTAG_MINSAMPLEVALUE, 201, TIFFConstants.TIFFTAG_MINSAMPLEVALUE, 828, 757, 710, 814, 919, 89, 68, 569, 11, XMPError.BADSTREAM, 796, 605, opencv_videoio.CV_CAP_PROP_XI_BUFFER_POLICY, 913, 801, 700, 799, 137, opencv_videoio.CV_CAP_PROP_XI_AEAG_ROI_OFFSET_X, 418, 592, 668, dc1394.DC1394_COLOR_CODING_YUV411, 859, 370, 694, 325, 240, 216, 257, TIFFConstants.TIFFTAG_PLANARCONFIG, 549, 209, 884, 315, 70, avutil.AV_PIX_FMT_YUV440P10BE, 793, opencv_videoio.CV_CAP_PROP_XI_CC_MATRIX_23, TIFFConstants.TIFFTAG_ORIENTATION, 877, 162, 749, 812, 684, opencv_videoio.CV_CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH, 334, 376, 849, 521, avutil.AV_PIX_FMT_YUV444P12BE, TIFFConstants.TIFFTAG_GRAYRESPONSECURVE, 803, 712, 19, dc1394.DC1394_COLOR_CODING_RGB16, AVStream.MAX_STD_TIMEBASES, 908, 103, 511, 51, 8, 517, 225, TIFFConstants.TIFFTAG_FREEBYTECOUNTS, opencv_videoio.CV_CAP_PROP_XI_CMS, 637, 731, 66, 255, 917, TIFFConstants.TIFFTAG_DOCUMENTNAME, opencv_videoio.CV_CAP_PROP_XI_OUTPUT_DATA_PACKING, 830, 730, 433, 848, opencv_videoio.CV_CAP_PROP_XI_SENSOR_FEATURE_SELECTOR, 136, opencv_videoio.CV_CAP_PROP_XI_ACQ_TIMING_MODE, 906, 90, 2, TIFFConstants.TIFFTAG_GRAYRESPONSEUNIT, 743, HSSFShapeTypes.ActionButtonSound, 655, 903, avutil.AV_PIX_FMT_YUV440P10BE, 49, 802, 580, dc1394.DC1394_COLOR_CODING_YUV444, 588, 188, opencv_videoio.CV_CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH, 10, 134, 628, 320, opencv_videoio.CV_CAP_PROP_XI_CC_MATRIX_00, 130, 739, 71, 263, 318, 374, 601, 192, 605, 142, 673, 687, 234, 722, 384, 177, 752, 607, 640, 455, HSSFShapeTypes.ActionButtonForwardNext, 689, 707, MetaDo.META_POLYLINE, 641, 48, 60, 732, 621, 895, 544, MetaDo.META_SETRELABS, 852, 655, avutil.AV_PIX_FMT_YUV444P14BE, 697, 755, 756, 60, 231, 773, 434, 421, 726, 528, 503, 118, 49, 795, 32, 144, 500, Jpeg.M_APPE, 836, 394, TIFFConstants.TIFFTAG_MINSAMPLEVALUE, 566, 319, 9, 647, 550, 73, 914, avutil.AV_PIX_FMT_NB, 126, 32, 681, avutil.AV_PIX_FMT_YUV440P12BE, 792, 620, 60, dc1394.DC1394_POWER_CLASS_PROV_MIN_15W, opencv_videoio.CV_CAP_PROP_XI_AEAG_ROI_WIDTH, 180, 791, 893, 754, 605, 383, 228, 749, 760, 213, 54, 297, 134, 54, 834, 299, 922, 191, 910, 532, dc1394.DC1394_POWER_CLASS_PROV_MIN_15W, 829, 189, 20, 167, 29, 872, opencv_videoio.CV_CAP_PROP_XI_WB_KG, 83, 402, 41, 656, MetaDo.META_CREATEPATTERNBRUSH, dc1394.DC1394_TRIGGER_SOURCE_3, 481, 173, 404, 251, 688, 95, 497, 555, dc1394.DC1394_PHY_DELAY_UNKNOWN_1, opencv_videoio.CV_CAP_PROP_XI_LUT_VALUE, avutil.AV_PIX_FMT_YUV444P12BE, 159, 924, opencv_videoio.CV_CAP_PROP_XI_SENSOR_MODE, 648, 55, 497, 10}, new int[]{352, 77, 373, 504, 35, 599, 428, 207, 409, 574, 118, opencv_videoio.CV_CAP_PROP_XI_TRG_SELECTOR, TIFFConstants.TIFFTAG_PAGENAME, 380, 350, opencv_videoio.CV_CAP_PROP_XI_CC_MATRIX_31, HSSFShapeTypes.ActionButtonReturn, TIFFConstants.TIFFTAG_CELLLENGTH, 920, 155, 914, 299, 229, dc1394.DC1394_PHY_DELAY_UNKNOWN_2, 294, 871, 306, 88, 87, HSSFShapeTypes.ActionButtonForwardNext, 352, 781, 846, 75, 327, TIFFConstants.TIFFTAG_JPEGDCTABLES, 435, opencv_videoio.CV_CAP_PROP_XI_LUT_VALUE, XMPError.BADXMP, Element.WRITABLE_DIRECT, 249, 346, 781, 621, 640, 268, 794, opencv_videoio.CV_CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT, opencv_videoio.CV_CAP_PROP_XI_AVAILABLE_BANDWIDTH, 781, 408, dc1394.DC1394_TRIGGER_MODE_14, 644, 102, opencv_videoio.CV_CAP_PROP_XI_GAMMAY, opencv_videoio.CV_CAP_PROP_XI_ACQ_FRAME_BURST_COUNT, TIFFConstants.TIFFTAG_GRAYRESPONSEUNIT, 632, 545, 37, 858, 916, 552, 41, opencv_videoio.CV_CAP_PROP_XI_LUT_INDEX, TIFFConstants.TIFFTAG_FREEBYTECOUNTS, 122, TIFFConstants.TIFFTAG_MODEL, 383, 800, opencv_videoio.CV_CAP_PROP_XI_CC_MATRIX_12, 98, 752, 472, 761, 107, 784, 860, 658, 741, TIFFConstants.TIFFTAG_GRAYRESPONSEUNIT, XMPError.BADSTREAM, 681, 407, 855, 85, 99, 62, opencv_videoio.CV_CAP_PROP_XI_CC_MATRIX_03, 180, 20, 297, opencv_videoio.CV_CAP_PROP_XI_WIDTH, 593, 913, 142, 808, 684, TIFFConstants.TIFFTAG_YPOSITION, opencv_videoio.CV_CAP_PROP_XI_COUNTER_SELECTOR, 561, 76, 653, 899, 729, 567, 744, dc1394.DC1394_TRIGGER_MODE_14, 513, 192, opencv_videoio.CV_CAP_PROP_XI_LENS_FOCAL_LENGTH, 258, 240, 518, 794, 395, 768, 848, 51, dc1394.DC1394_POWER_CLASS_PROV_MIN_30W, 384, 168, 190, 826, 328, 596, 786, 303, 570, 381, 415, 641, 156, Jpeg.M_APPD, 151, 429, 531, 207, 676, 710, 89, 168, 304, 402, 40, 708, 575, 162, 864, 229, 65, 861, 841, 512, 164, opencv_videoio.CV_CAP_PROP_XI_GAMMAC, 221, 92, dc1394.DC1394_COLOR_CODING_RGB16, 785, TIFFConstants.TIFFTAG_FREEOFFSETS, dc1394.DC1394_COLOR_CODING_MONO16, 850, 836, 827, 736, 707, 94, 8, opencv_videoio.CV_CAP_PROP_XI_CC_MATRIX_33, 114, 521, 2, opencv_videoio.CV_CAP_PROP_XI_ACQ_FRAME_BURST_COUNT, 851, opencv_videoio.CV_CAP_PROP_XI_LUT_VALUE, 152, 729, 771, 95, 248, dc1394.DC1394_COLOR_CODING_RAW8, 578, 323, 856, 797, TIFFConstants.TIFFTAG_FREEBYTECOUNTS, 51, 684, opencv_videoio.CV_CAP_PROP_XI_COOLING, opencv_videoio.CV_CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX, 820, 669, 45, 902, opencv_videoio.CV_CAP_PROP_XI_HEIGHT, 167, avutil.AV_PIX_FMT_NB, AVCodecContext.FF_PROFILE_H264_HIGH_444_PREDICTIVE, 173, 35, opencv_videoio.CV_CAP_PROP_XI_OUTPUT_DATA_PACKING, 651, 51, 699, 591, opencv_videoio.CV_CAP_PROP_XI_HEIGHT, 578, 37, 124, 298, 332, 552, 43, 427, 119, 662, 777, opencv_videoio.CV_CAP_PROP_XI_COLOR_FILTER_ARRAY, 850, MetaDo.META_CREATEBRUSHINDIRECT, 364, 578, 911, TIFFConstants.TIFFTAG_YRESOLUTION, 711, 472, 420, 245, TIFFConstants.TIFFTAG_FREEOFFSETS, 594, 394, 511, 327, 589, 777, 699, 688, 43, 408, 842, 383, 721, 521, opencv_videoio.CV_CAP_PROP_XI_HDR_KNEEPOINT_COUNT, 644, 714, opencv_videoio.CV_CAP_PROP_XI_HDR, 62, 145, 873, 663, 713, 159, 672, 729, 624, 59, HSSFShapeTypes.ActionButtonForwardNext, 417, 158, 209, opencv_videoio.CV_CAP_PROP_XI_KNEEPOINT1, 564, 343, 693, 109, 608, opencv_videoio.CV_CAP_PROP_XI_KNEEPOINT1, 365, 181, 772, 677, avutil.AV_PIX_FMT_YUV444P14LE, 248, dc1394.DC1394_COLOR_CODING_YUV411, 708, 410, dc1394.DC1394_TRIGGER_SOURCE_3, 870, 617, 841, 632, 860, TIFFConstants.TIFFTAG_FREEBYTECOUNTS, opencv_videoio.CV_CAP_PROP_XI_COUNTER_SELECTOR, 35, 777, 618, opencv_videoio.CV_CAP_PROP_XI_SENSOR_FEATURE_VALUE, 424, 833, 77, 597, 346, TIFFConstants.TIFFTAG_DOCUMENTNAME, 757, 632, 695, 751, avutil.AV_PIX_FMT_YUV440P12BE, MetaDo.META_CREATEPALETTE, 184, 45, 787, 680, 18, 66, 407, 369, 54, opencv_videoio.CV_CAP_PROP_XI_CC_MATRIX_31, 228, dc1394.DC1394_POWER_CLASS_USES_MAX_3W, 830, 922, 437, TIFFConstants.TIFFTAG_JPEGQTABLES, 644, 905, 789, 420, 305, opencv_videoio.CV_CAP_PROP_XI_AEAG_ROI_WIDTH, 207, 300, 892, 827, 141, opencv_videoio.CV_CAP_PROP_XI_COUNTER_VALUE, 381, 662, 513, 56, 252, 341, 242, 797, 838, 837, 720, 224, avutil.AV_PIX_FMT_YUV444P12BE, 631, 61, 87, opencv_videoio.CV_CAP_PROP_XI_HDR_KNEEPOINT_COUNT, avutil.AV_PIX_FMT_YUV444P14LE, 756, 665, 397, 808, 851, avutil.AV_PIX_FMT_YUV444P14BE, 473, 795, 378, 31, 647, 915, opencv_videoio.CV_CAP_PROP_XI_LIMIT_BANDWIDTH, 806, 590, 731, dc1394.DC1394_FEATURE_IRIS, 216, 548, 249, 321, 881, 699, opencv_videoio.CV_CAP_PROP_XI_FRAMERATE, 673, 782, 210, 815, 905, 303, 843, 922, TIFFConstants.TIFFTAG_MAXSAMPLEVALUE, 73, opencv_videoio.CV_CAP_PROP_XI_HOUS_TEMP, 791, 660, 162, opencv_videoio.CV_CAP_PROP_XI_TRG_SELECTOR, avutil.AV_PIX_FMT_YUV444P12LE, 155, 422, 907, 817, 187, 62, 16, dc1394.DC1394_FEATURE_IRIS, opencv_videoio.CV_CAP_PROP_XI_FRAMERATE, 336, TIFFConstants.TIFFTAG_XPOSITION, 437, 375, TIFFConstants.TIFFTAG_STRIPOFFSETS, dc1394.DC1394_POWER_CLASS_PROV_MIN_30W, 296, 183, 923, 116, 667, 751, dc1394.DC1394_COLOR_CODING_YUV411, 62, 366, 691, 379, 687, 842, 37, dc1394.DC1394_COLOR_CODING_MONO16, 720, 742, 330, 5, 39, 923, 311, 424, 242, 749, 321, 54, 669, 316, avutil.AV_PIX_FMT_NB, 299, opencv_videoio.CV_CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT, 105, 667, opencv_videoio.CV_CAP_PROP_XI_CC_MATRIX_21, 640, 672, 576, opencv_videoio.CV_CAP_PROP_XI_BUFFER_POLICY, 316, opencv_videoio.CV_CAP_PROP_XI_CC_MATRIX_13, 721, dc1394.DC1394_POWER_CLASS_PROV_MIN_30W, 46, 656, 447, 171, 616, opencv_videoio.CV_CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE, 190, 531, 297, 321, MetaDo.META_CREATEPENINDIRECT, 752, opencv_videoio.CV_CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX, 175, 134, 14, 381, 433, 717, 45, 111, 20, 596, TIFFConstants.TIFFTAG_PLANARCONFIG, 736, 138, 646, 411, 877, 669, 141, 919, 45, 780, 407, 164, 332, 899, 165, 726, 600, 325, opencv_videoio.CV_CAP_PROP_XI_TRG_SELECTOR, 655, dc1394.DC1394_COLOR_CODING_MONO16, 752, 768, 223, 849, 647, 63, avutil.AV_PIX_FMT_YUV444P14LE, 863, 251, 366, 304, TIFFConstants.TIFFTAG_XRESOLUTION, 738, 675, 410, dc1394.DC1394_TRIGGER_MODE_5, AVCodecContext.FF_PROFILE_H264_HIGH_444_PREDICTIVE, 31, 121, 303, 263}};

    private PDF417ErrorCorrection() {
    }

    static int getErrorCorrectionCodewordCount(int errorCorrectionLevel) {
        if (errorCorrectionLevel >= 0 && errorCorrectionLevel <= 8) {
            return 1 << (errorCorrectionLevel + 1);
        }
        throw new IllegalArgumentException("Error correction level must be between 0 and 8!");
    }

    static int getRecommendedMinimumErrorCorrectionLevel(int n) throws WriterException {
        if (n <= 0) {
            throw new IllegalArgumentException("n must be > 0");
        } else if (n <= 40) {
            return 2;
        } else {
            if (n <= 160) {
                return 3;
            }
            if (n <= 320) {
                return 4;
            }
            if (n <= 863) {
                return 5;
            }
            throw new WriterException("No recommendation possible");
        }
    }

    static String generateErrorCorrection(CharSequence dataCodewords, int errorCorrectionLevel) {
        int j;
        int k = getErrorCorrectionCodewordCount(errorCorrectionLevel);
        char[] e = new char[k];
        int sld = dataCodewords.length();
        for (int i = 0; i < sld; i++) {
            int t1 = (dataCodewords.charAt(i) + e[e.length - 1]) % PDF417Common.NUMBER_OF_CODEWORDS;
            for (j = k - 1; j >= 1; j--) {
                e[j] = (char) ((e[j - 1] + (929 - ((EC_COEFFICIENTS[errorCorrectionLevel][j] * t1) % PDF417Common.NUMBER_OF_CODEWORDS))) % PDF417Common.NUMBER_OF_CODEWORDS);
            }
            e[0] = (char) ((929 - ((EC_COEFFICIENTS[errorCorrectionLevel][0] * t1) % PDF417Common.NUMBER_OF_CODEWORDS)) % PDF417Common.NUMBER_OF_CODEWORDS);
        }
        StringBuilder sb = new StringBuilder(k);
        for (j = k - 1; j >= 0; j--) {
            if (e[j] != '\u0000') {
                e[j] = (char) (929 - e[j]);
            }
            sb.append(e[j]);
        }
        return sb.toString();
    }
}
